<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>递归与递推</title>
    <url>/2020/06/01/%E9%80%92%E5%BD%92%E4%B8%8E%E9%80%92%E6%8E%A8/</url>
    <content><![CDATA[<p>本博客题目来源于<a href="https://www.acwing.com/" target="_blank" rel="external">Acwing</a>,个人学习总结。<br><a href="https://www.acwing.com/activity/content/problem/content/1545/1/" target="_blank" rel="external">递归实现指数型枚举</a></p>
<h1 id="递归实现指数型枚举"><a href="#递归实现指数型枚举" class="headerlink" title="递归实现指数型枚举"></a>递归实现指数型枚举</h1><h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a><font size="5">题目大意</font></h2><p>从 1 ~ n 这 n 个整数中随机选取任意多个，输出所有可能的选择方案。</p>
<h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a><font size="5">输入格式</font></h2><p>输入一个整数n。</p>
<h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a><font size="5">输出格式</font></h2><p>每行输出一种方案。<br>同一行内的数必须升序排列，相邻两个数用恰好1个空格隔开。<br>对于没有选任何数的方案，输出空行。<br>本题有自定义校验器（SPJ），各行（不同方案）之间的顺序任意。</p>
<h2 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a><font size="5">数据范围</font></h2><p>1&lt;=n&lt;=15</p>
<h2 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例"></a><font size="5">输入样例</font></h2><p>3</p>
<h2 id="输出样例"><a href="#输出样例" class="headerlink" title="输出样例"></a><font size="5">输出样例</font></h2><p>3<br>2<br>2 3<br>1<br>1 3<br>1 2<br>1 2 3</p>
<h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a><font size="5">解题思路</font></h2><p><font size="4" color="blue">递归搜索解空间,到搜索边界输出,每个数只有两种状态,选或是不选,选就记录一下。</font></p>
<h2 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a><font size="5">AC代码</font></h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">#include&lt;cstdio&gt;</div><div class="line">#include&lt;cstring&gt;</div><div class="line">#include&lt;algorithm&gt;</div><div class="line">#include&lt;vector&gt;</div><div class="line">using namespace std;</div><div class="line">vector&lt; int&gt;v;</div><div class="line">int n;</div><div class="line">void dfs(int x)</div><div class="line">&#123;</div><div class="line">    if(x==n+1)  // 递归边界</div><div class="line">    &#123;</div><div class="line">        for(int i=0;i &lt; v.size();++i) printf(&quot;%d &quot;,v[i]);</div><div class="line">        puts(&quot;&quot;);</div><div class="line">        return;</div><div class="line">    &#125;</div><div class="line">    //不选</div><div class="line">    dfs(x+1);</div><div class="line">    //选</div><div class="line">    v.push_back(x);</div><div class="line">    dfs(x+1);</div><div class="line">    //还原现场</div><div class="line">    v.pop_back();</div><div class="line">&#125;</div><div class="line">int main()</div><div class="line">&#123;</div><div class="line">    scanf(&quot; %d&quot;,&amp;n);</div><div class="line">    dfs(1);</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="https://www.acwing.com/problem/content/96/" target="_blank" rel="external">递归实现排列型枚举</a></p>
<h1 id="递归实现排列型枚举"><a href="#递归实现排列型枚举" class="headerlink" title="递归实现排列型枚举"></a>递归实现排列型枚举</h1><h2 id="题目大意-1"><a href="#题目大意-1" class="headerlink" title="题目大意"></a><font size="5">题目大意</font></h2><p>把 1 ~ n 这 n 个整数排成一行后随机打乱顺序，输出所有可能的次序。</p>
<h2 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a><font size="5">输入格式</font></h2><p>一个整数n。</p>
<h2 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a><font size="5">输出格式</font></h2><p>按照从小到大的顺序输出所有方案，每行1个。<br>首先，同一行相邻两个数用一个空格隔开。<br>其次，对于两个不同的行，对应下标的数 一一 比较，字典序较小的排在前面。</p>
<h2 id="数据范围-1"><a href="#数据范围-1" class="headerlink" title="数据范围"></a><font size="5">数据范围</font></h2><p>1≤n≤9</p>
<h2 id="输入样例-1"><a href="#输入样例-1" class="headerlink" title="输入样例"></a><font size="5">输入样例</font></h2><p>3</p>
<h2 id="输出样例-1"><a href="#输出样例-1" class="headerlink" title="输出样例"></a><font size="5">输出样例</font></h2><p>1 2 3<br>1 3 2<br>2 1 3<br>2 3 1<br>3 1 2<br>3 2 1</p>
<h2 id="解题思路-1"><a href="#解题思路-1" class="headerlink" title="解题思路"></a><font size="5">解题思路</font></h2><p><img src="http://edviv.gitee.io/images_bed/images/LanQiao/YXC/Check/DFS1.png" alt=""></p>
<h2 id="AC代码-1"><a href="#AC代码-1" class="headerlink" title="AC代码"></a><font size="5">AC代码</font></h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">#include &lt;cstdio&gt;</div><div class="line">#include &lt;cstring&gt;</div><div class="line">#include &lt;vector&gt;</div><div class="line">#include &lt;algorithm&gt;</div><div class="line">using namespace std;</div><div class="line">int n;</div><div class="line">bool vis[20];</div><div class="line">vector &lt;int&gt; v;</div><div class="line">void dfs(int x)</div><div class="line">&#123;</div><div class="line">    if(x&gt;n) //递归边界</div><div class="line">    &#123;</div><div class="line">        for(int i = 0;i &lt; v.size(); ++i) printf(&quot;%d &quot;,v[i]);</div><div class="line">        puts(&quot;&quot;);</div><div class="line">        return;</div><div class="line">    &#125;</div><div class="line">    //解空间</div><div class="line">    for(int i = 1; i &lt;= n; ++i)</div><div class="line">    &#123;</div><div class="line">        if(vis[i]) continue;  //当前这个数已经选择则不选</div><div class="line">        // 选择 i </div><div class="line">        v.push_back(i);   </div><div class="line">        vis[i]=true;</div><div class="line">        // 递归搜索</div><div class="line">        dfs(x+1);</div><div class="line">        //现场还原</div><div class="line">        v.pop_back();</div><div class="line">        vis[i]=false;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">int main()</div><div class="line">&#123;</div><div class="line">    scanf(&quot;%d&quot;,&amp;n);</div><div class="line">    dfs(1);</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="https://www.acwing.com/activity/content/problem/content/1549/1/" target="_blank" rel="external">简单斐波那契</a></p>
<h1 id="简单斐波那契"><a href="#简单斐波那契" class="headerlink" title="简单斐波那契"></a>简单斐波那契</h1><h2 id="题目大意-2"><a href="#题目大意-2" class="headerlink" title="题目大意"></a><font size="5">题目大意</font></h2><p>以下数列0 1 1 2 3 5 8 13 21 …被称为斐波纳契数列。<br>这个数列从第3项开始，每一项都等于前两项之和。<br>输入一个整数N，请你输出这个序列的前N项。</p>
<h2 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a><font size="5">输入格式</font></h2><p>一个整数N。</p>
<h2 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a><font size="5">输出格式</font></h2><p>在一行中输出斐波那契数列的前N项，数字之间用空格隔开。</p>
<h2 id="数据范围-2"><a href="#数据范围-2" class="headerlink" title="数据范围"></a><font size="5">数据范围</font></h2><p>0&lt;N&lt;46</p>
<h2 id="输入样例-2"><a href="#输入样例-2" class="headerlink" title="输入样例"></a><font size="5">输入样例</font></h2><p>5</p>
<h2 id="输出样例-2"><a href="#输出样例-2" class="headerlink" title="输出样例"></a><font size="5">输出样例</font></h2><p>0 1 1 2 3</p>
<h2 id="解题思路-2"><a href="#解题思路-2" class="headerlink" title="解题思路"></a><font size="5">解题思路</font></h2><p><font size="4" color="red">f[i] = f[i-1] + f[i-2] (1<i<n)< font=""></i<n)<></font></p>
<h2 id="AC代码-2"><a href="#AC代码-2" class="headerlink" title="AC代码"></a><font size="5">AC代码</font></h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">#include &lt;cstdio&gt;</div><div class="line">using namespace std;</div><div class="line">const int maxn=50;</div><div class="line">int f[50],n;</div><div class="line">int main()</div><div class="line">&#123;</div><div class="line">    scanf(&quot;%d&quot;,&amp;n);</div><div class="line">    f[1]=1;</div><div class="line">    if(n&gt;1)</div><div class="line">        for(int i=2;i &lt; n;++i) f[i]=f[i-1]+f[i-2];</div><div class="line">    for(int i=0;i &lt; n;++i) printf(&quot;%d &quot;,f[i]);</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="https://www.acwing.com/problem/content/97/" target="_blank" rel="external">费解的开关</a></p>
<h1 id="费解的开关"><a href="#费解的开关" class="headerlink" title="费解的开关"></a>费解的开关</h1><h2 id="题目大意-3"><a href="#题目大意-3" class="headerlink" title="题目大意"></a><font size="5">题目大意</font></h2><p>你玩过“拉灯”游戏吗？25盏灯排成一个5x5的方形。每一个灯都有一个开关，游戏者可以改变它的状态。每一步，游戏者可以改变某一个灯的状态。游戏者改变一个灯的状态会产生连锁反应：和这个灯上下左右相邻的灯也要相应地改变其状态。<br>我们用数字“1”表示一盏开着的灯，用数字“0”表示关着的灯。下面这种状态<br><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">10111</div><div class="line">01101</div><div class="line">10111</div><div class="line">10000</div><div class="line">11011</div></pre></td></tr></table></figure></p>
<p>在改变了最左上角的灯的状态后将变成：<br><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">01111</div><div class="line">11101</div><div class="line">10111</div><div class="line">10000</div><div class="line">11011</div></pre></td></tr></table></figure></p>
<p>再改变它正中间的灯后状态将变成：<br><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">01111</div><div class="line">11001</div><div class="line">11001</div><div class="line">10100</div><div class="line">11011</div></pre></td></tr></table></figure></p>
<p>给定一些游戏的初始状态，编写程序判断游戏者是否可能在6步以内使所有的灯都变亮。</p>
<h2 id="输入格式-3"><a href="#输入格式-3" class="headerlink" title="输入格式"></a><font size="5">输入格式</font></h2><p>第一行输入正整数n，代表数据中共有n个待解决的游戏初始状态。<br>以下若干行数据分为n组，每组数据有5行，每行5个字符。每组数据描述了一个游戏的初始状态。各组数据间用一个空行分隔。</p>
<h2 id="输出格式-3"><a href="#输出格式-3" class="headerlink" title="输出格式"></a><font size="5">输出格式</font></h2><p>一共输出n行数据，每行有一个小于等于6的整数，它表示对于输入数据中对应的游戏状态最少需要几步才能使所有灯变亮。<br>对于某一个游戏初始状态，若6步以内无法使所有灯变亮，则输出“-1”。</p>
<h2 id="数据范围-3"><a href="#数据范围-3" class="headerlink" title="数据范围"></a><font size="5">数据范围</font></h2><p>0&lt; n ≤500</p>
<h2 id="输入样例-3"><a href="#输入样例-3" class="headerlink" title="输入样例"></a><font size="5">输入样例</font></h2><p>3<br>00111<br>01011<br>10001<br>11010<br>11100</p>
<p>11101<br>11101<br>11110<br>11111<br>11111</p>
<p>01111<br>11111<br>11111<br>11111<br>11111</p>
<h2 id="输出样例-3"><a href="#输出样例-3" class="headerlink" title="输出样例"></a><font size="5">输出样例</font></h2><p>3<br>2<br>-1</p>
<h2 id="解题思路-3"><a href="#解题思路-3" class="headerlink" title="解题思路"></a><font size="5">解题思路</font></h2><p><font size="4" color="red">1.每一行的灯光只按一次。</font></p>
<p><font size="4" color="red">2.每一行开关的操作,完全被前一行的灯的亮灭状态所决定。</font></p>
<p><font size="5" color="red">按法与灯是否开或者关没有影响</font></p>
<h2 id="AC代码-3"><a href="#AC代码-3" class="headerlink" title="AC代码"></a><font size="5">AC代码</font></h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">#include &lt;cstdio&gt;</div><div class="line">#include &lt;iostream&gt;</div><div class="line">#include &lt;algorithm&gt;</div><div class="line">#include &lt;cstring&gt;</div><div class="line">#define INF 0x3f3f3f3f</div><div class="line">using namespace std;</div><div class="line">const int N=10;</div><div class="line">int a[N][N],b[N][N];</div><div class="line">int dir[6][2]=&#123;-1,0,0,0,1,0,0,1,0,-1&#125;;</div><div class="line">bool inbound(int x,int l,int r) //判断位置是否合法</div><div class="line">&#123;</div><div class="line">    if(x&lt;l || x&gt;r) return false;</div><div class="line">    return true;</div><div class="line">&#125;</div><div class="line">bool check()  //判断灯是否全亮</div><div class="line">&#123;</div><div class="line">    for(int i=1;i&lt;=5;++i)</div><div class="line">        for(int j=1;j&lt;=5;++j)</div><div class="line">            if(!b[i][j]) return false; //1表示亮，0表示关</div><div class="line">    return true;</div><div class="line">&#125;</div><div class="line">void Change(int x,int y)  //转变函数</div><div class="line">&#123;</div><div class="line">    for(int i=0;i&lt;5;++i)</div><div class="line">    &#123;</div><div class="line">        int tx=x+dir[i][0],ty=y+dir[i][1];</div><div class="line">        if(!inbound(tx,1,5)||!inbound(ty,1,5)) continue;</div><div class="line">        b[tx][ty]^=1;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">void work()</div><div class="line">&#123;</div><div class="line">    int ans=INF;</div><div class="line">    for(int i=1;i&lt;=1&lt;&lt;5;++i)  //32种状态,二进制状态枚举</div><div class="line">    &#123;</div><div class="line">        memcpy(b,a,sizeof(a));  //复制</div><div class="line">        int step=0;</div><div class="line">        for(int j=1;j&lt;=5;++j)  //枚举第一行</div><div class="line">        &#123;</div><div class="line">            if(!(i&gt;&gt;(j-1)&amp;1))  //第一行的第j个灯是关着的,0按，1不按</div><div class="line">            &#123;</div><div class="line">                Change(1,j);</div><div class="line">                step++;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">        for(int j=1;j&lt;=4;++j)  //剩下i+1行</div><div class="line">            for(int k=1;k&lt;=5;++k)</div><div class="line">                if(!b[j][k])</div><div class="line">                &#123;</div><div class="line">                    step++;</div><div class="line">                    Change(j+1,k);</div><div class="line">                &#125;</div><div class="line">            if(check()) ans=min(ans,step);</div><div class="line">    &#125;</div><div class="line">    if(ans&gt;6) puts(&quot;-1&quot;);</div><div class="line">    else printf(&quot;%d\n&quot;,ans);</div><div class="line">&#125;</div><div class="line">int main()</div><div class="line">&#123;</div><div class="line">    int t;</div><div class="line">    scanf(&quot; %d&quot;,&amp;t);</div><div class="line">    while(t--)</div><div class="line">    &#123;</div><div class="line">        getchar();</div><div class="line">        char ch;</div><div class="line">        for(int i=1;i&lt;=5;++i)&#123;</div><div class="line">            for(int j=1;j&lt;=5;++j)</div><div class="line">            &#123;</div><div class="line">                scanf(&quot; %c&quot;,&amp;ch);</div><div class="line">                a[i][j]=ch-&apos;0&apos;;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        getchar();</div><div class="line">        work();</div><div class="line">    &#125;</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="https://www.acwing.com/activity/content/problem/content/1547/1/" target="_blank" rel="external">递归实现组合型枚举</a></p>
<h1 id="递归实现组合型枚举"><a href="#递归实现组合型枚举" class="headerlink" title="递归实现组合型枚举"></a>递归实现组合型枚举</h1><h2 id="题目大意-4"><a href="#题目大意-4" class="headerlink" title="题目大意"></a><font size="5">题目大意</font></h2><p>从 1 ~ n 这 n 个整数中随机选出 m 个，输出所有可能的选择方案。</p>
<h2 id="输入格式-4"><a href="#输入格式-4" class="headerlink" title="输入格式"></a><font size="5">输入格式</font></h2><p>两个整数 n，m，在同一行用空格隔开。</p>
<h2 id="输出格式-4"><a href="#输出格式-4" class="headerlink" title="输出格式"></a><font size="5">输出格式</font></h2><p>按照从小到大的顺序输出所有方案，每行1个。<br>首先，同一行内的数升序排列，相邻两个数用一个空格隔开。<br>其次，对于两个不同的行，对应下标的数一一比较，字典序较小的排在前面（例如1 3 5 7排在1 3 6 8前面）。</p>
<h2 id="数据范围-4"><a href="#数据范围-4" class="headerlink" title="数据范围"></a><font size="5">数据范围</font></h2><p>n&gt;0 ,<br>0≤m≤n ,<br>n+(n−m)≤25</p>
<h2 id="输入样例-4"><a href="#输入样例-4" class="headerlink" title="输入样例"></a><font size="5">输入样例</font></h2><p>5 3</p>
<h2 id="输出样例-4"><a href="#输出样例-4" class="headerlink" title="输出样例"></a><font size="5">输出样例</font></h2><p>1 2 3<br>1 2 4<br>1 2 5<br>1 3 4<br>1 3 5<br>1 4 5<br>2 3 4<br>2 3 5<br>2 4 5<br>3 4 5 </p>
<h2 id="解题思路-4"><a href="#解题思路-4" class="headerlink" title="解题思路"></a><font size="5">解题思路</font></h2><p><font size="4" color="red">递归搜索,剪枝</font></p>
<h2 id="AC代码-4"><a href="#AC代码-4" class="headerlink" title="AC代码"></a><font size="5">AC代码</font></h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">#include &lt;cstdio&gt;</div><div class="line">#include &lt;vector&gt;</div><div class="line">#include &lt;iostream&gt;</div><div class="line">using namespace std;</div><div class="line">const int maxn=1e5+7;</div><div class="line">vector&lt;int&gt;v,ans[maxn];</div><div class="line">int n,m,idx;</div><div class="line">void dfs(int x)</div><div class="line">&#123;</div><div class="line">    if(v.size()&gt;m||v.size()+(n-x+1)&lt;m) return; //剪枝</div><div class="line">    if(x==n+1)  //递归边界</div><div class="line">    &#123;</div><div class="line">        for(int i=0;i&lt;v.size();++i) ans[idx].push_back(v[i]);</div><div class="line">        idx++;</div><div class="line">        return;</div><div class="line">    &#125;</div><div class="line">    dfs(x+1);</div><div class="line">    v.push_back(x);</div><div class="line">    dfs(x+1);</div><div class="line">    v.pop_back();</div><div class="line">&#125;</div><div class="line">int main()</div><div class="line">&#123;</div><div class="line">    scanf(&quot; %d%d&quot;,&amp;n,&amp;m);</div><div class="line">    dfs(1);</div><div class="line">    </div><div class="line">    for(int i=idx-1;i&gt;=0;--i)&#123;</div><div class="line">        for(vector&lt;int&gt;::iterator it=ans[i].begin();it!=ans[i].end();++it)&#123;</div><div class="line">            cout&lt;&lt;*it&lt;&lt;&quot; &quot;;</div><div class="line">        &#125;</div><div class="line">        puts(&quot;&quot;);</div><div class="line">    &#125;</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">#include &lt;cstdio&gt;</div><div class="line">using namespace std;</div><div class="line">const int maxn=1e5+7;</div><div class="line">int ans[maxn],n,m;</div><div class="line">void dfs(int x,int s)</div><div class="line">&#123;</div><div class="line">    if(x+n-s&lt;m) return; //剪枝</div><div class="line">    if(x==m+1)</div><div class="line">    &#123;</div><div class="line">        for(int i=1;i&lt;=m;++i) printf(&quot;%d &quot;,ans[i]);</div><div class="line">        puts(&quot;&quot;);</div><div class="line">        return;</div><div class="line">    &#125;</div><div class="line">    for(int i=s;i&lt;=n;++i)</div><div class="line">    &#123;</div><div class="line">        ans[x]=i;</div><div class="line">        dfs(x+1,i+1);</div><div class="line">        // 恢复现场</div><div class="line">        ans[x]=0;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">int main()</div><div class="line">&#123;</div><div class="line">    scanf(&quot;%d%d&quot;,&amp;n,&amp;m);</div><div class="line">    dfs(1,1);</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="https://www.acwing.com/activity/content/problem/content/1551/1/" target="_blank" rel="external">带分数</a></p>
<h1 id="带分数"><a href="#带分数" class="headerlink" title="带分数"></a>带分数</h1><h2 id="题目大意-5"><a href="#题目大意-5" class="headerlink" title="题目大意"></a><font size="5">题目大意</font></h2><p>100 可以表示为带分数的形式：100=3+69258714<br>还可以表示为：100=82+3546197<br>注意特征：带分数中，数字 1 ∼ 9 分别出现且只出现一次（不包含 0）。<br>类似这样的带分数，100 有 11 种表示法。</p>
<h2 id="输入格式-5"><a href="#输入格式-5" class="headerlink" title="输入格式"></a><font size="5">输入格式</font></h2><p>一个正整数。</p>
<h2 id="输出格式-5"><a href="#输出格式-5" class="headerlink" title="输出格式"></a><font size="5">输出格式</font></h2><p>输出输入数字用数码 1∼9 不重复不遗漏地组成带分数表示的全部种数。</p>
<h2 id="数据范围-5"><a href="#数据范围-5" class="headerlink" title="数据范围"></a><font size="5">数据范围</font></h2><p>1≤N&lt;10^6</p>
<h2 id="输入样例-5"><a href="#输入样例-5" class="headerlink" title="输入样例"></a><font size="5">输入样例</font></h2><p>100</p>
<h2 id="输出样例-5"><a href="#输出样例-5" class="headerlink" title="输出样例"></a><font size="5">输出样例</font></h2><p>11</p>
<h2 id="解题思路-5"><a href="#解题思路-5" class="headerlink" title="解题思路"></a><font size="5">解题思路</font></h2><p><font size="4" color="red">n = a + b/c –&gt; nc = ac + b</font></p>
<p><font size="4" color="red">枚举 a; 枚举 c; 判断 b 是否成立。</font></p>
<h2 id="AC代码-5"><a href="#AC代码-5" class="headerlink" title="AC代码"></a><font size="5">AC代码</font></h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">#include &lt;iostream&gt;</div><div class="line">#include &lt;cstdio&gt;</div><div class="line">#include &lt;cstring&gt;</div><div class="line">using namespace std;</div><div class="line">const int maxn=15;</div><div class="line">typedef long long ll;</div><div class="line">int n,ans;</div><div class="line">bool vis[maxn],t[maxn];</div><div class="line">bool check(int a,int c)</div><div class="line">&#123;</div><div class="line">    ll b=(ll)(n-a)*c;  //求b</div><div class="line">    if(!a || !b || !c) return false;  //a!=0,b!=0,c!=0</div><div class="line">    memcpy(t,vis,sizeof vis);  //复制</div><div class="line">    while(b)  //枚举b的每一位</div><div class="line">    &#123;</div><div class="line">        ll x=b%10; </div><div class="line">        b/=10;</div><div class="line">        if(!x || t[x]) return false;</div><div class="line">        t[x]=1;</div><div class="line">    &#125;</div><div class="line">    for(int i=1;i&lt;=9;++i)  </div><div class="line">        if(!t[i]) return false;  //有没出现过的数字</div><div class="line">    return 1;</div><div class="line">&#125;</div><div class="line">void dfs_c(int s,int a,int c)</div><div class="line">&#123;</div><div class="line">    if(check(a,c)) ans++;  //满足条件</div><div class="line">    for(int i=1;i&lt;=9;++i)   </div><div class="line">        if(!vis[i])   //未出现过</div><div class="line">        &#123;</div><div class="line">            vis[i]=1;  // 记录</div><div class="line">            dfs_c(s+1,a,c*10+i);  //搜索</div><div class="line">            vis[i]=0;  //回溯</div><div class="line">        &#125;</div><div class="line">&#125;</div><div class="line">void dfs_a(int s,int a) //s:当前状态, a:枚举的数字</div><div class="line">&#123;</div><div class="line">    if(a&gt;=n) return;   //边界</div><div class="line">    if(a) dfs_c(s,a,0);  // a!=0</div><div class="line">    for(int i=1;i&lt;=9;++i)</div><div class="line">        if(!vis[i])   //未出现过</div><div class="line">        &#123;</div><div class="line">            vis[i]=1;  //记录</div><div class="line">            dfs_a(s+1,a*10+i); //搜索</div><div class="line">            vis[i]=0;  //回溯</div><div class="line">        &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int main()</div><div class="line">&#123;</div><div class="line">    scanf(&quot; %d&quot;,&amp;n);</div><div class="line">    dfs_a(0,0);</div><div class="line">    printf(&quot;%d\n&quot;,ans);</div><div class="line">    return 0;    </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="https://www.acwing.com/problem/content/118/" target="_blank" rel="external">飞行员兄弟</a></p>
<h1 id="飞行员兄弟"><a href="#飞行员兄弟" class="headerlink" title="飞行员兄弟"></a>飞行员兄弟</h1><h2 id="题目大意-6"><a href="#题目大意-6" class="headerlink" title="题目大意"></a><font size="5">题目大意</font></h2><p>“飞行员兄弟”这个游戏，需要玩家顺利的打开一个拥有16个把手的冰箱。<br>已知每个把手可以处于以下两种状态之一：打开或关闭。<br>只有当所有把手都打开时，冰箱才会打开。<br>把手可以表示为一个4х4的矩阵，您可以改变任何一个位置[i,j]上把手的状态。<br>但是，这也会使得第i行和第j列上的所有把手的状态也随着改变。<br>请你求出打开冰箱所需的切换把手的次数最小值是多少。</p>
<h2 id="输入格式-6"><a href="#输入格式-6" class="headerlink" title="输入格式"></a><font size="5">输入格式</font></h2><p>输入一共包含四行，每行包含四个把手的初始状态。<br>符号“+”表示把手处于闭合状态，而符号“-”表示把手处于打开状态。<br>至少一个手柄的初始状态是关闭的。</p>
<h2 id="输出格式-6"><a href="#输出格式-6" class="headerlink" title="输出格式"></a><font size="5">输出格式</font></h2><p>第一行输出一个整数N，表示所需的最小切换把手次数。<br>接下来N行描述切换顺序，每行输入两个整数，代表被切换状态的把手的行号和列号，数字之间用空格隔开。<br>注意：如果存在多种打开冰箱的方式，则按照优先级整体从上到下，同行从左到右打开。</p>
<h2 id="数据范围-6"><a href="#数据范围-6" class="headerlink" title="数据范围"></a><font size="5">数据范围</font></h2><p>1≤i,j≤4</p>
<h2 id="输入样例-6"><a href="#输入样例-6" class="headerlink" title="输入样例"></a><font size="5">输入样例</font></h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">-+--</div><div class="line">----</div><div class="line">----</div><div class="line">-+--</div></pre></td></tr></table></figure>
<h2 id="输出样例-6"><a href="#输出样例-6" class="headerlink" title="输出样例"></a><font size="5">输出样例</font></h2><p>6<br>1 1<br>1 3<br>1 4<br>4 1<br>4 3<br>4 4</p>
<h2 id="解题思路-6"><a href="#解题思路-6" class="headerlink" title="解题思路"></a><font size="5">解题思路</font></h2><p><font size="4" color="red">1.二进制状态枚举,总共有1&lt;<16种情况。< font=""></16种情况。<></font></p>
<p><font size="4" color="red">2.开关的关闭或者打开与其自身的状态没有关系。</font></p>
<h2 id="AC代码-6"><a href="#AC代码-6" class="headerlink" title="AC代码"></a><font size="5">AC代码</font></h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">#include &lt;cstdio&gt;</div><div class="line">#include &lt;vector&gt;</div><div class="line">#include &lt;cstring&gt;</div><div class="line">#define f first</div><div class="line">#define s second</div><div class="line">#define pb push_back</div><div class="line">using namespace std;</div><div class="line">typedef pair&lt;int,int&gt;PII;</div><div class="line">const int maxn=10;</div><div class="line">char a[maxn][maxn],t[maxn][maxn];</div><div class="line">void turn(int x,int y)  //转换</div><div class="line">&#123;</div><div class="line">    for(int i=0;i&lt;4;++i)</div><div class="line">    &#123;</div><div class="line">        if(a[x][i]==&apos;-&apos;) a[x][i]=&apos;+&apos;;</div><div class="line">        else a[x][i]=&apos;-&apos;;</div><div class="line">        if(a[i][y]==&apos;-&apos;) a[i][y]=&apos;+&apos;;</div><div class="line">        else a[i][y]=&apos;-&apos;;</div><div class="line">    &#125;</div><div class="line">    if(a[x][y]==&apos;-&apos;) a[x][y]=&apos;+&apos;;</div><div class="line">    else a[x][y]=&apos;-&apos;;</div><div class="line">&#125;</div><div class="line">int main()</div><div class="line">&#123;</div><div class="line">    for(int i=0;i&lt;4;++i) scanf(&quot; %s&quot;,a[i]);</div><div class="line">    vector&lt;PII&gt;ans;</div><div class="line">    for(int op=0;op&lt;(1&lt;&lt;16);++op)</div><div class="line">    &#123;</div><div class="line">        memcpy(t,a,sizeof t);  //备份</div><div class="line">        vector&lt;PII&gt;temp;   //临时变量</div><div class="line">        for(int i=0;i&lt;4;++i)  //操作</div><div class="line">            for(int j=0;j&lt;4;++j)</div><div class="line">                if(op&gt;&gt;(i*4+j)&amp;1)</div><div class="line">                &#123;</div><div class="line">                    temp.pb(&#123;i,j&#125;);</div><div class="line">                    turn(i,j);</div><div class="line">                &#125;</div><div class="line">        bool ok=true;  //判断灯是否全亮的标志</div><div class="line">        for(int i=0;i&lt;4;++i)</div><div class="line">            for(int j=0;j&lt;4;++j)</div><div class="line">                if(a[i][j]==&apos;+&apos;) ok=false;</div><div class="line">        if(ok&amp;&amp;(ans.empty()||ans.size()&gt;temp.size())) ans=temp;</div><div class="line">        memcpy(a,t,sizeof a);</div><div class="line">    &#125;</div><div class="line">    int len=ans.size();</div><div class="line">    printf(&quot;%d\n&quot;,len);</div><div class="line">    for(int i=0;i&lt;len;++i) printf(&quot;%d %d\n&quot;,ans[i].f+1,ans[i].s+1);</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="https://www.acwing.com/activity/content/problem/content/1553/1/" target="_blank" rel="external">翻硬币</a></p>
<h1 id="翻硬币"><a href="#翻硬币" class="headerlink" title="翻硬币"></a>翻硬币</h1><h2 id="题目大意-7"><a href="#题目大意-7" class="headerlink" title="题目大意"></a><font size="5">题目大意</font></h2><p>小明正在玩一个“翻硬币”的游戏。<br>桌上放着排成一排的若干硬币。我们用 * 表示正面，用 o 表示反面（是小写字母，不是零）。<br>比如，可能情形是：<br><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">**oo***oooo</div></pre></td></tr></table></figure></p>
<p>如果同时翻转左边的两个硬币，则变为：<br><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">oooo***oooo</div></pre></td></tr></table></figure></p>
<p>现在小明的问题是：如果已知了初始状态和要达到的目标状态，每次只能同时翻转相邻的两个硬币,那么对特定的局面，最少要翻动多少次呢？<br>我们约定：把翻动相邻的两个硬币叫做一步操作。</p>
<h2 id="输入格式-7"><a href="#输入格式-7" class="headerlink" title="输入格式"></a><font size="5">输入格式</font></h2><p>两行等长的字符串，分别表示初始状态和要达到的目标状态。</p>
<h2 id="输出格式-7"><a href="#输出格式-7" class="headerlink" title="输出格式"></a><font size="5">输出格式</font></h2><p>一个整数，表示最小操作步数</p>
<h2 id="数据范围-7"><a href="#数据范围-7" class="headerlink" title="数据范围"></a><font size="5">数据范围</font></h2><p>输入字符串的长度均不超过100。<br>数据保证答案一定有解。</p>
<h2 id="输入样例-7"><a href="#输入样例-7" class="headerlink" title="输入样例"></a><font size="5">输入样例</font></h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">**********</div><div class="line">o****o****</div></pre></td></tr></table></figure>
<h2 id="输出样例-7"><a href="#输出样例-7" class="headerlink" title="输出样例"></a><font size="5">输出样例</font></h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">5</div></pre></td></tr></table></figure>
<h2 id="解题思路-7"><a href="#解题思路-7" class="headerlink" title="解题思路"></a><font size="5">解题思路</font></h2><p><font size="4" color="red">贪心思路:枚举对应位置是否相等,不等就改变当前状态和下一个状态,最后输出答案。</font></p>
<p><font size="4" color="red"></font></p>
<h2 id="AC代码-7"><a href="#AC代码-7" class="headerlink" title="AC代码"></a><font size="5">AC代码</font></h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">#include &lt;cstdio&gt;</div><div class="line">#include &lt;cstring&gt;</div><div class="line">using namespace std;</div><div class="line">const int maxn=107;</div><div class="line">char s[maxn],p[maxn];</div><div class="line">int main()</div><div class="line">&#123;</div><div class="line">    scanf(&quot; %s %s&quot;,s,p);</div><div class="line">    int ans=0;</div><div class="line">    int lens=strlen(s);</div><div class="line">    for(int i=0,j=0;i&lt;lens;++i,++j)</div><div class="line">           if(s[i]!=p[j])</div><div class="line">           &#123;</div><div class="line">               ans++;</div><div class="line">               if(s[i+1]==&apos;*&apos;) s[i+1]=&apos;o&apos;;</div><div class="line">               else s[i+1]=&apos;*&apos;;</div><div class="line">           &#125;</div><div class="line">    printf(&quot;%d\n&quot;,ans);</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>蓝桥杯</category>
      </categories>
  </entry>
  <entry>
    <title>Hexo-Theme-Sakura</title>
    <url>/2020/05/27/Hexo-Theme-Sakura/</url>
    <content><![CDATA[<p>hexo-theme-sakura主题 <a href="https://github.com/honjun/hexo-theme-sakura/blob/master/README.md" target="_blank" rel="external">English document</a></p>
<p>基于WordPress主题<a href="https://github.com/mashirozx/Sakura/" target="_blank" rel="external">Sakura</a>修改成Hexo的主题。</p>
<p><a href="https://sakura.hojun.cn" target="_blank" rel="external">demo预览</a></p>
<p>正在开发中……</p>
<p><img src="https://wx3.sinaimg.cn/large/006bYVyvly1g069tuf42oj312w0m8ndq.jpg" alt=""></p>
<h2 id="交流群"><a href="#交流群" class="headerlink" title="交流群"></a>交流群</h2><p>若你是使用者，加群QQ: 801511924</p>
<p>若你是创作者，加群QQ: 194472590</p>
<h2 id="主题特性"><a href="#主题特性" class="headerlink" title="主题特性"></a>主题特性</h2><ul>
<li>首页大屏视频</li>
<li>首页随机封面</li>
<li>图片懒加载</li>
<li>valine评论</li>
<li>fancy-box相册</li>
<li>pjax支持，音乐不间断</li>
<li>aplayer音乐播放器</li>
<li>多级导航菜单（按现在大部分hexo主题来说，这也算是个特性了）</li>
</ul>
<h2 id="赞赏作者"><a href="#赞赏作者" class="headerlink" title="赞赏作者"></a>赞赏作者</h2><p>如果喜欢hexo-theme-sakura主题，可以考虑资助一下哦~非常感激！</p>
<p><a href="https://www.paypal.me/hojuncn" target="_blank" rel="external">paypal</a> | <a href="https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/donate/AliPayQR.jpg" target="_blank" rel="external">Alipay 支付宝</a> | <a href="https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/donate/WeChanSQ.jpg" target="_blank" rel="external">WeChat Pay 微信支付</a></p>
<h2 id="未完善的使用教程"><a href="#未完善的使用教程" class="headerlink" title="未完善的使用教程"></a>未完善的使用教程</h2><p>那啥？老实说我目前也不是很有条理233333333~</p>
<h2 id="1、主题下载安装"><a href="#1、主题下载安装" class="headerlink" title="1、主题下载安装"></a>1、主题下载安装</h2><p><a href="https://github.com/honjun/hexo-theme-sakura" target="_blank" rel="external">hexo-theme-sakura</a>建议下载压缩包格式，因为除了主题内容还有些source的配置对新手来说比较太麻烦，直接下载解压就省去这些麻烦咯。</p>
<p>下载好后解压到博客根目录（不是主题目录哦，重复的选择替换）。接着在命令行（cmd、bash）运行<code>npm i</code>安装依赖。</p>
<h2 id="2、主题配置"><a href="#2、主题配置" class="headerlink" title="2、主题配置"></a>2、主题配置</h2><h3 id="博客根目录下的-config配置"><a href="#博客根目录下的-config配置" class="headerlink" title="博客根目录下的_config配置"></a>博客根目录下的_config配置</h3><p>站点</p>
<pre>
<code>
# Site
title: 你的站点名
subtitle:
description: 站点简介
keywords:
author: 作者名
language: zh-cn
timezone:
</code>
</pre>

<p>部署</p>
<pre>
  <code>
deploy:
  type: git
  repo: 
    github: 你的github仓库地址
    # coding: 你的coding仓库地址
  branch: master
  </code>
</pre>

<p>备份 （使用hexo b发布备份到远程仓库）</p>
<pre>
  <code>
backup:
  type: git
  message: backup my blog of https://honjun.github.io/
  repository:
    # 你的github仓库地址,备份分支名  （建议新建backup分支）
    github: https://github.com/honjun/honjun.github.io.git,backup
    # coding: https://git.coding.net/hojun/hojun.git,backup
    </code>
</pre>

<h3 id="主题目录下的-config配置"><a href="#主题目录下的-config配置" class="headerlink" title="主题目录下的_config配置"></a>主题目录下的_config配置</h3><p>其中标明【改】的是需要修改部门，标明【选】是可改可不改，标明【非】是不用改的部分</p>
<pre>
  <code>
  site name
  #站点名 【改】
  prefixName: さくら荘その
  siteName: hojun
  </code>
</pre>

<pre>
  <code>
    #favicon and site master avatar
    #站点的favicon和头像 输入图片路径（下面的配置是都是cdn的相对路径，没有cdn请填写完整路径，
    建议使用jsdeliver搭建一个cdn啦，先去下载我的cdn替换下图片就行了，简单方便~）【改】
    favicon: /images/favicon.ico
    avatar: /img/custom/avatar.jpg
  </code>
</pre> 

<pre>
  <code>
    #站点url 【改】
    url: https://sakura.hojun.cn
    #站点介绍（或者说是个人签名）【改】
    description: Live your life with passion! With some drive!
    #站点cdn，没有就为空 【改】  若是cdn为空，一些图片地址就要填完整地址了，比如之前avatar就要填
    https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/avatar.jpg
    cdn: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6
    </code>
</pre>

<pre>
  <code>
    #开启pjax 【选】
    pjax: 1
    #站点首页的公告信息 【改】
    notice: hexo-Sakura主题已经开源，目前正在开发中...
    #懒加载的加载中图片 【选】
    lazyloadImg: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/loader/orange.progress-bar-stripe-loader.svg
  </code>
</pre>

<pre>
  <code>
    #站点菜单配置 【选】
    menus:
    首页: { path: /, fa: fa-fort-awesome faa-shake }
      归档: { path: /archives, fa: fa-archive faa-shake, submenus: { 
      技术: {path: /categories/技术/, fa: fa-code }, 
      生活: {path: /categories/生活/, fa: fa-file-text-o }, 
      资源: {path: /categories/资源/, fa: fa-cloud-download }, 
      随想: {path: /categories/随想/, fa: fa-commenting-o },
      转载: {path: /categories/转载/, fa: fa-book }
      } }
    清单: { path: javascript:;, fa: fa-list-ul faa-vertical, submenus: { 
      书单: {path: /tags/悦读/, fa: fa-th-list faa-bounce }, 
      番组: {path: /bangumi/, fa: fa-film faa-vertical }, 
      歌单: {path: /music/, fa: fa-headphones },
      图集: {path: /tags/图集/, fa: fa-photo }
    } }
    留言板: { path: /comment/, fa: fa-pencil-square-o faa-tada }
    友人帐: { path: /links/, fa: fa-link faa-shake }
    赞赏: { path: /donate/, fa: fa-heart faa-pulse }
    关于: { path: /, fa: fa-leaf faa-wrench , submenus: { 
      我？: {path: /about/, fa: fa-meetup}, 
      主题: {path: /theme-sakura/, fa: iconfont icon-sakura },
      Lab: {path: /lab/, fa: fa-cogs },
    } }
    客户端: { path: /client/, fa: fa-android faa-vertical }
    RSS: { path: /atom.xml, fa: fa-rss faa-pulse }
  </code>
</pre>

<pre>
  <code>
    Home page sort type: -1: newer first，1: older first. 【非】
    homePageSortType: -1
    Home page article shown number) 【非】
    homeArticleShown: 10
    #背景图片 【选】
    bgn: 8
    startdash面板 url, title, desc img 【改】
    startdash: 
      - {url: /theme-sakura/, title: Sakura, desc: 本站 hexo 主题, img: /img/startdash/sakura.md.png}
      - {url: http://space.bilibili.com/271849279, title: Bilibili, desc: 博主的b站视频, img: /img/startdash/bilibili.jpg}
      - {url: /, title: hojun的万事屋, desc: 技术服务, img: /img/startdash/wangshiwu.jpg}
      # your site build time or founded date
      # 你的站点建立日期 【改】
      siteBuildingTime: 07/17/2018
  </code>
</pre>

<pre>
  <code>
    # 社交按钮(social)  url, img PC端配置 【改】
    social:
      github: {url: http://github.com/honjun, img: /img/social/github.png}
      sina: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/sina.png}
      wangyiyun: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/wangyiyun.png}
      zhihu: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/zhihu.png}
      email: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/email.svg}
      wechat: {url: /#, qrcode: /img/custom/wechat.jpg, img: /img/social/wechat.png}
    # 社交按钮(msocial)  url, img 移动端配置 【改】
    msocial:
      github: {url: http://github.com/honjun, fa: fa-github, color: 333}
      weibo: {url: http://weibo.com/mashirozx?is_all=1, fa: fa-weibo, color: dd4b39}
      qq: {url: https://wpa.qq.com/msgrd?v=3&uin=954655431&site=qq&menu=yes, fa: fa-qq, color: 25c6fe}
  </code>
</pre>

<pre>
  <code>
    # 赞赏二维码（其中wechatSQ是赞赏单页面的赞赏码图片）【改】
    donate:
    alipay: /img/custom/donate/AliPayQR.jpg
    wechat: /img/custom/donate/WeChanQR.jpg
    wechatSQ: /img/custom/donate/WeChanSQ.jpg
  </code>
</pre>

<pre>
  <code>
    # 首页视频地址为https://cdn.jsdelivr.net/gh/honjun/hojun@1.2/Unbroken.mp4，配置如下 【改】
    movies:
    url: https://cdn.jsdelivr.net/gh/honjun/hojun@1.2
    # 多个视频用逗号隔开，随机获取。支持的格式目前已知MP4,Flv。其他的可以试下，不保证有用
    name: Unbroken.mp4
  </code>
</pre>

<pre>
  <code>
# 左下角aplayer播放器配置 主要改id和server这两项，修改详见[aplayer文档] 【改】
aplayer: 
  id: 2660651585
  server: netease
  type: playlist
  fixed: true
  mini: false
  autoplay: false
  loop: all
  order: random
  preload: auto
  volume: 0.7
  mutex: true
# Valine评论配置【改】
valine: true
v_appId: GyC3NzMvd0hT9Yyd2hYIC0MN-gzGzoHsz
v_appKey: mgOpfzbkHYqU92CV4IDlAUHQ
</code>
</pre>

<h2 id="分类页和标签页配置"><a href="#分类页和标签页配置" class="headerlink" title="分类页和标签页配置"></a>分类页和标签页配置</h2><h3 id="分类页"><a href="#分类页" class="headerlink" title="分类页"></a>分类页</h3><p><img src="https://ws3.sinaimg.cn/large/006bYVyvly1g07b0gucy9j31060jih76.jpg" alt=""></p>
<h3 id="标签页"><a href="#标签页" class="headerlink" title="标签页"></a>标签页</h3><p><img src="https://wx2.sinaimg.cn/large/006bYVyvly1g07azb2399j31040jgazs.jpg" alt=""></p>
<p>配置项在\themes\Sakura\languages\zh-cn.yml里。新增一个分类或标签最好加下哦，当然嫌麻烦可以直接使用一张默认图片（可以改主题或者直接把404图片替换下，征求下意见要不要给这个在配置文件中加个开关，可以issue或群里提出来），现在是没设置的话会使用那种倒立小狗404哦。</p>
<pre>
  <code>
#category
# 按分类名创建
技术:
    #中文标题
    zh: 野生技术协会 
    # 英文标题
    en: Geek – Only for Love
    # 封面图片
    img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/coding.jpg
生活:
    zh: 生活
    en: live
    img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/writing.jpg

#tag
# 标签名即是标题
悦读:
    # 封面图片
    img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/reading.jpg
  </code>
</pre>

<h2 id="单页面封面配置"><a href="#单页面封面配置" class="headerlink" title="单页面封面配置"></a>单页面封面配置</h2><p><img src="https://ws3.sinaimg.cn/large/006bYVyvly1g07b1pi619j31080jge4u.jpg" alt=""><br>如留言板页面页面，位于source下的comment下，打开index.md如下：</p>
<pre>
  <code>
title: comment
date: 2018-12-20 23:13:48
keywords: 留言板
description: 
comments: true
# 在这里配置单页面头部图片，自定义替换哦~
photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/comment.jpg
  </code>
</pre>

<h2 id="单页面配置"><a href="#单页面配置" class="headerlink" title="单页面配置"></a>单页面配置</h2><h3 id="番组计划页-（请直接在下载后的文件中改，下面的添加了注释可能会有些影响）"><a href="#番组计划页-（请直接在下载后的文件中改，下面的添加了注释可能会有些影响）" class="headerlink" title="番组计划页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响）"></a>番组计划页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响）</h3><p><img src="https://wx2.sinaimg.cn/large/006bYVyvly1g07b2gyx60j31090jjahj.jpg" alt=""></p>
<pre>
  <code>
layout: bangumi
title: bangumi
comments: false
date: 2019-02-10 21:32:48
keywords:
description:
bangumis:
  # 番组图片
  - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg
  # 番组名
    title: 朝花夕誓——于离别之朝束起约定之花
  # 追番状态 （追番ing/已追完）
    status: 已追完
  # 追番进度
    progress: 100
  # 番剧日文名称
    jp: さよならの朝に約束の花をかざろう
  # 放送时间
    time: 放送时间: 2018-02-24 SUN.
  # 番剧介绍
    desc:  住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。
  - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg
    title: 朝花夕誓——于离别之朝束起约定之花
    status: 已追完
    progress: 50
    jp: さよならの朝に約束の花をかざろう
    time: 放送时间: 2018-02-24 SUN.
    desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。
  </code>
</pre>

<h3 id="友链页-（请直接在下载后的文件中改，下面的添加了注释可能会有些影响）"><a href="#友链页-（请直接在下载后的文件中改，下面的添加了注释可能会有些影响）" class="headerlink" title="友链页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响）"></a>友链页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响）</h3><p><img src="https://ws3.sinaimg.cn/large/006bYVyvly1g07b39tleej31080jhjv1.jpg" alt=""></p>
<pre>
  <code>
layout: links
title: links
# 创建日期，可以改下
date: 2018-12-19 23:11:06 
# 图片上的标题，自定义修改
keywords: 友人帐 
description: 
# true/false 开启/关闭评论
comments: true 
# 页面头部图片，自定义修改
photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/links.jpg 
# 友链配置
links: 
  # 类型分组
  - group: 个人项目
    # 类型简介
    desc: 充分说明这家伙是条咸鱼 < (￣︶￣)>
    items:
    # 友链链接
    - url: https://shino.cc/fgvf
    # 友链头像
      img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg
    # 友链站点名
      name: Google
    # 友链介绍  下面雷同
      desc: Google 镜像
    - url: https://shino.cc/fgvf
      img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg
      name: Google
      desc: Google 镜像
  # 类型分组...
  - group: 小伙伴们
    desc: 欢迎交换友链 ꉂ(ˊᗜˋ)
    items:
    - url: https://shino.cc/fgvf
      img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg
      name: Google
      desc: Google 镜像
    - url: https://shino.cc/fgvf
      img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg
      name: Google
      desc: Google 镜像
  </code>
</pre>

<h2 id="写文章配置"><a href="#写文章配置" class="headerlink" title="写文章配置"></a>写文章配置</h2><p>主题集成了个人插件hexo-tag-bili和hexo-tag-fancybox_img。其中hexo-tag-bili用来在文章或单页面中插入B站外链视频，使用语法如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">&#123;% bili video_id [page] %&#125;</div></pre></td></tr></table></figure>
<p>详细使用教程详见<a href="https://github.com/honjun/hexo-tag-bili/blob/master/README-zh_cn.md" target="_blank" rel="external">hexo-tag-bili</a>。</p>
<p>hexo-tag-fancybox_img用来在文章或单页面中图片，使用语法如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">&#123;% fb_img src [caption] %&#125;</div></pre></td></tr></table></figure>
<p>详细使用教程详见<a href="https://github.com/honjun/hexo-tag-fancybox_img/blob/master/README-zh_cn.md" target="_blank" rel="external">hexo-tag-fancybox_img</a></p>
<h2 id="还有啥，一时想不起来……"><a href="#还有啥，一时想不起来……" class="headerlink" title="还有啥，一时想不起来……"></a>还有啥，一时想不起来……</h2><p>To be continued…</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
  </entry>
</search>
